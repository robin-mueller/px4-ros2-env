{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        // Deploy tasks
        {
            "label": "Run PX4",
            "detail": "Start PX4 autopilot application",
            "type": "shell",
            "command": "cd $PX4_ROS2_ENV_PX4_AUTOPILOT_DIR && PX4_GZ_WORLD=px4_ros2_env make px4_sitl gz_x500",
            "problemMatcher": "$gcc",
            "presentation": {
                "reveal": "never",
                "panel": "dedicated",
            }
        },
        {
            "label": "Run QGroundControl",
            "detail": "Start QGroundControl application",
            "type": "shell",
            "command": "QT_QPA_PLATFORM='xcb' $PX4_ROS2_ENV_QGROUNDCONTROL_APP",
            "problemMatcher": "$gcc",
            "presentation": {
                "reveal": "never",
                "panel": "dedicated",
            }
        },
        {
            "label": "Run Micro XRCE DDS Agent",
            "detail": "Start Micro XRCE DDS agent",
            "type": "shell",
            "command": "MicroXRCEAgent udp4 -p 8888",
            "problemMatcher": "$gcc",
            "presentation": {
                "reveal": "never",
                "panel": "dedicated",
            }
        },
        {
            "label": "Run Simulation",
            "detail": "Start all required processes for UAS simulation",
            "dependsOrder": "parallel",
            "dependsOn": [
                "Run Micro XRCE DDS Agent",
                "Run QGroundControl",
                "Run PX4"
            ],
            "problemMatcher": "$gcc",
        },
        {
            "label": "Run Groot2",
            "detail": "Start Groot2 application",
            "type": "shell",
            "command": "$PX4_ROS2_ENV_GROOT2_APP",
            "problemMatcher": "$gcc",
            "presentation": {
                "reveal": "never",
                "panel": "dedicated",
            }
        },
        // Build tasks
        {
            "label": "Build package",
            "detail": "Build a single package",
            "type": "shell",
            "command": "COLCON_DEFAULTS_FILE=${workspaceFolder}/colcon_defaults.yaml colcon build --packages-select ${input:package}",
            "group": {
                "kind": "build"
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "Build packages up to",
            "detail": "Build a package and its dependencies",
            "type": "shell",
            "command": "COLCON_DEFAULTS_FILE=${workspaceFolder}/colcon_defaults.yaml colcon build --packages-up-to ${input:package}",
            "group": {
                "kind": "build"
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "Build all",
            "detail": "Build workspace",
            "type": "shell",
            "command": "COLCON_DEFAULTS_FILE=${workspaceFolder}/colcon_defaults.yaml colcon build",
            "group": {
                "kind": "build"
            },
            "problemMatcher": "$gcc"
        },
        // Test tasks
        {
            "label": "Display last colcon test results",
            "detail": "Show the test results of the last colcon test run",
            "type": "shell",
            "command": "colcon test-result --all --verbose",
            "group": {
                "kind": "test"
            },
            "problemMatcher": "$gcc"
        },
        // Clean
        {
            "label": "Clean",
            "detail": "Run the CMake clean target",
            "type": "shell",
            "command": "COLCON_DEFAULTS_FILE=${workspaceFolder}/colcon_defaults.yaml colcon build --cmake-target clean",
            "problemMatcher": "$gcc"
        },
        {
            "label": "Purge",
            "detail": "Purge workspace by deleting all generated files.",
            "type": "shell",
            "command": "sudo rm -fr build install log; sudo py3clean .",
            "problemMatcher": []
        },
        // Workspace editing tasks
        {
            "label": "Setup environment",
            "detail": "Setup the development environment",
            "type": "shell",
            "command": "./setup.sh",
            "problemMatcher": []
        },
        {
            "label": "Update ROS2 dependencies",
            "detail": "Update/install the ROS2 workspace dependencies",
            "type": "shell",
            "command": "./dep.sh",
            "problemMatcher": []
        },
        {
            "label": "Export worlds",
            "detail": "Export the .sdf files to the worlds directory of the PX4 installation.",
            "type": "shell",
            "command": "${workspaceFolder}/world/export.sh",
            "problemMatcher": []
        }
        {
            "label": "New ament_cmake package",
            "detail": "Create a new ROS cpp package from a template.",
            "type": "shell",
            "command": "ros2 pkg create --destination-directory src --build-type ament_cmake ${input:package}",
            "problemMatcher": []
        },
        {
            "label": "New ament_python package",
            "detail": "Create a new ROS python package from a template.",
            "type": "shell",
            "command": "ros2 pkg create --destination-directory src --build-type ament_python ${input:package}",
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "package",
            "type": "command",
            "command": "extension.commandvariable.promptStringRemember",
            "args": {
                "key": "package_name",
                "description": "Package name"
            }
        }
    ]
}
